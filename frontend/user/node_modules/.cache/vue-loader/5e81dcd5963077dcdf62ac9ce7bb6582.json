{"remainingRequest":"F:\\LeTaoOnlineMall\\frontend\\user\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\LeTaoOnlineMall\\frontend\\user\\src\\views\\Goods.vue?vue&type=style&index=0&id=b2d47ae8&scoped=true&lang=css&","dependencies":[{"path":"F:\\LeTaoOnlineMall\\frontend\\user\\src\\views\\Goods.vue","mtime":1657611704291},{"path":"F:\\LeTaoOnlineMall\\frontend\\user\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\LeTaoOnlineMall\\frontend\\user\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\LeTaoOnlineMall\\frontend\\user\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\LeTaoOnlineMall\\frontend\\user\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\LeTaoOnlineMall\\frontend\\user\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmdvb2RzIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTsNCn0NCi8qIOmdouWMheWxkUNTUyAqLw0KLmVsLXRhYnMtLWNhcmQgLmVsLXRhYnNfX2hlYWRlciB7DQogIGJvcmRlci1ib3R0b206IG5vbmU7DQp9DQouZ29vZHMgLmJyZWFkY3J1bWIgew0KICBoZWlnaHQ6IDUwcHg7DQogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOw0KfQ0KLmdvb2RzIC5icmVhZGNydW1iIC5lbC1icmVhZGNydW1iIHsNCiAgd2lkdGg6IDEyMjVweDsNCiAgbGluZS1oZWlnaHQ6IDMwcHg7DQogIGZvbnQtc2l6ZTogMTZweDsNCiAgbWFyZ2luOiAwIGF1dG87DQp9DQovKiDpnaLljIXlsZFDU1MgRU5EICovDQoNCi8qIOWIhuexu+agh+etvkNTUyAqLw0KLmdvb2RzIC5uYXYgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsNCn0NCi5nb29kcyAubmF2IC5wcm9kdWN0LW5hdiB7DQogIHdpZHRoOiAxMjI1cHg7DQogIGhlaWdodDogNDBweDsNCiAgbGluZS1oZWlnaHQ6IDQwcHg7DQogIG1hcmdpbjogMCBhdXRvOw0KfQ0KLm5hdiAucHJvZHVjdC1uYXYgLnRpdGxlIHsNCiAgd2lkdGg6IDUwcHg7DQogIGZvbnQtc2l6ZTogMTZweDsNCiAgZm9udC13ZWlnaHQ6IDcwMDsNCiAgZmxvYXQ6IGxlZnQ7DQp9DQovKiDliIbnsbvmoIfnrb5DU1MgRU5EICovDQoNCi8qIOS4u+imgeWGheWuueWMukNTUyAqLw0KLmdvb2RzIC5tYWluIHsNCiAgbWFyZ2luOiAwIGF1dG87DQogIG1heC13aWR0aDogMTIyNXB4Ow0KfQ0KLmdvb2RzIC5tYWluIC5saXN0IHsNCiAgbWluLWhlaWdodDogNjUwcHg7DQogIHBhZGRpbmctdG9wOiAxNC41cHg7DQogIG1hcmdpbi1sZWZ0OiAtMTMuN3B4Ow0KICBvdmVyZmxvdzogYXV0bzsNCn0NCi5nb29kcyAubWFpbiAucGFnaW5hdGlvbiB7DQogIGhlaWdodDogNTBweDsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0KLmdvb2RzIC5tYWluIC5ub25lLXByb2R1Y3Qgew0KICBjb2xvcjogIzMzMzsNCiAgbWFyZ2luLWxlZnQ6IDEzLjdweDsNCn0NCi8qIOS4u+imgeWGheWuueWMukNTUyBFTkQgKi8NCg=="},{"version":3,"sources":["Goods.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Goods.vue","sourceRoot":"src/views","sourcesContent":["<!--\r\n * @Description: 全部商品页面组件(包括全部商品,商品分类,商品搜索)\r\n * @Author: hai-27\r\n * @Date: 2020-02-07 16:23:00\r\n * @LastEditors: hai-27\r\n * @LastEditTime: 2020-03-08 12:11:13\r\n -->\r\n<template>\r\n  <div class=\"goods\" id=\"goods\" name=\"goods\">\r\n    <!-- 面包屑 -->\r\n    <div class=\"breadcrumb\">\r\n      <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n        <el-breadcrumb-item to=\"/\">首页</el-breadcrumb-item>\r\n        <el-breadcrumb-item>全部商品</el-breadcrumb-item>\r\n        <el-breadcrumb-item v-if=\"search\">搜索</el-breadcrumb-item>\r\n        <el-breadcrumb-item v-else>分类</el-breadcrumb-item>\r\n        <el-breadcrumb-item v-if=\"search\">{{search}}</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n    <!-- 面包屑END -->\r\n\r\n    <!-- 分类标签 -->\r\n    <div class=\"nav\">\r\n      <div class=\"product-nav\">\r\n        <div class=\"title\">分类</div>\r\n        <el-tabs v-model=\"activeName\" type=\"card\">\r\n          <el-tab-pane\r\n            v-for=\"item in categoryList\"\r\n            :key=\"item.category_id\"\r\n            :label=\"item.category_name\"\r\n            :name=\"''+item.category_id\"\r\n          />\r\n        </el-tabs>\r\n      </div>\r\n    </div>\r\n    <!-- 分类标签END -->\r\n\r\n    <!-- 主要内容区 -->\r\n    <div class=\"main\">\r\n      <div class=\"list\">\r\n        <MyList :list=\"product\" v-if=\"product.length>0\"></MyList>\r\n        <div v-else class=\"none-product\">抱歉没有找到相关的商品，请看看其他的商品</div>\r\n      </div>\r\n      <!-- 分页 -->\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n          background\r\n          layout=\"prev, pager, next\"\r\n          :page-size=\"pageSize\"\r\n          :total=\"total\"\r\n          @current-change=\"currentChange\"\r\n        ></el-pagination>\r\n      </div>\r\n      <!-- 分页END -->\r\n    </div>\r\n    <!-- 主要内容区END -->\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      categoryList: \"\", //分类列表\r\n      categoryID: [], // 分类id\r\n      product: \"\", // 商品列表\r\n      productList: \"\",\r\n      total: 0, // 商品总量\r\n      pageSize: 15, // 每页显示的商品数量\r\n      currentPage: 1, //当前页码\r\n      activeName: \"-1\", // 分类列表当前选中的id\r\n      search: \"\" // 搜索条件\r\n    };\r\n  },\r\n  created() {\r\n    // 获取分类列表\r\n    this.getCategory();\r\n  },\r\n  activated() {\r\n    this.activeName = \"-1\"; // 初始化分类列表当前选中的id为-1\r\n    this.total = 0; // 初始化商品总量为0\r\n    this.currentPage = 1; //初始化当前页码为1\r\n    // 如果路由没有传递参数，默认为显示全部商品\r\n    if (Object.keys(this.$route.query).length == 0) {\r\n      this.categoryID = [];\r\n      this.activeName = \"0\";\r\n      return;\r\n    }\r\n    // 如果路由传递了categoryID，则显示对应的分类商品\r\n    if (this.$route.query.categoryID != undefined) {\r\n      this.categoryID = this.$route.query.categoryID;\r\n      if (this.categoryID.length == 1) {\r\n        this.activeName = \"\" + this.categoryID[0];\r\n      }\r\n      return;\r\n    }\r\n    // 如果路由传递了search，则为搜索，显示对应的分类商品\r\n    if (this.$route.query.search != undefined) {\r\n      this.search = this.$route.query.search;\r\n    }\r\n  },\r\n  watch: {\r\n    // 监听点击了哪个分类标签，通过修改分类id，响应相应的商品\r\n    activeName: function(val) {\r\n      if (val == 0) {\r\n        this.categoryID = [];\r\n      }\r\n      if (val > 0) {\r\n        this.categoryID = [Number(val)];\r\n      }\r\n      // 初始化商品总量和当前页码\r\n      this.total = 0;\r\n      this.currentPage = 1;\r\n      // 更新地址栏链接，方便刷新页面可以回到原来的页面\r\n      this.$router.push({\r\n        path: \"/goods\",\r\n        query: { categoryID: this.categoryID }\r\n      });\r\n    },\r\n    // 监听搜索条件，响应相应的商品\r\n    search: function(val) {\r\n      if (val != \"\") {\r\n        this.getProductBySearch(val);\r\n      }\r\n    },\r\n    // 监听分类id，响应相应的商品\r\n    categoryID: function() {\r\n      this.getData();\r\n      this.search = \"\";\r\n    },\r\n    // 监听路由变化，更新路由传递了搜索条件\r\n    $route: function(val) {\r\n      if (val.path == \"/goods\") {\r\n        if (val.query.search != undefined) {\r\n          this.activeName = \"-1\";\r\n          this.currentPage = 1;\r\n          this.total = 0;\r\n          this.search = val.query.search;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 返回顶部\r\n    backtop() {\r\n      const timer = setInterval(function() {\r\n        const top = document.documentElement.scrollTop || document.body.scrollTop;\r\n        const speed = Math.floor(-top / 5);\r\n        document.documentElement.scrollTop = document.body.scrollTop =\r\n          top + speed;\r\n\r\n        if (top === 0) {\r\n          clearInterval(timer);\r\n        }\r\n      }, 20);\r\n    },\r\n    // 页码变化调用currentChange方法\r\n    currentChange(currentPage) {\r\n      this.currentPage = currentPage;\r\n      if (this.search != \"\") {\r\n        this.getProductBySearch();\r\n      } else {\r\n        this.getData();\r\n      }\r\n      this.backtop();\r\n    },\r\n    // 向后端请求分类列表数据\r\n    getCategory() {\r\n      this.$axios\r\n        .post(\"/api/product/getCategory\", {})\r\n        .then(res => {\r\n          const val = {\r\n            category_id: 0,\r\n            category_name: \"全部\"\r\n          };\r\n          const cate = res.data.category;\r\n          cate.unshift(val);\r\n          this.categoryList = cate;\r\n        })\r\n        .catch(err => {\r\n          return Promise.reject(err);\r\n        });\r\n    },\r\n    // 向后端请求全部商品或分类商品数据\r\n    getData() {\r\n      // 如果分类列表为空则请求全部商品数据，否则请求分类商品数据\r\n      const api =\r\n        this.categoryID.length == 0\r\n          ? \"/api/product/getAllProduct\"\r\n          : \"/api/product/getProductByCategory\";\r\n      this.$axios\r\n        .post(api, {\r\n          categoryID: this.categoryID,\r\n          currentPage: this.currentPage,\r\n          pageSize: this.pageSize\r\n        })\r\n        .then(res => {\r\n          this.product = res.data.Product;\r\n          this.total = res.data.total;\r\n        })\r\n        .catch(err => {\r\n          return Promise.reject(err);\r\n        });\r\n    },\r\n    // 通过搜索条件向后端请求商品数据\r\n    getProductBySearch() {\r\n      this.$axios\r\n        .post(\"/api/product/getProductBySearch\", {\r\n          search: this.search,\r\n          currentPage: this.currentPage,\r\n          pageSize: this.pageSize\r\n        })\r\n        .then(res => {\r\n          this.product = res.data.Product;\r\n          this.total = res.data.total;\r\n        })\r\n        .catch(err => {\r\n          return Promise.reject(err);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.goods {\r\n  background-color: #f5f5f5;\r\n}\r\n/* 面包屑CSS */\r\n.el-tabs--card .el-tabs__header {\r\n  border-bottom: none;\r\n}\r\n.goods .breadcrumb {\r\n  height: 50px;\r\n  background-color: white;\r\n}\r\n.goods .breadcrumb .el-breadcrumb {\r\n  width: 1225px;\r\n  line-height: 30px;\r\n  font-size: 16px;\r\n  margin: 0 auto;\r\n}\r\n/* 面包屑CSS END */\r\n\r\n/* 分类标签CSS */\r\n.goods .nav {\r\n  background-color: white;\r\n}\r\n.goods .nav .product-nav {\r\n  width: 1225px;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  margin: 0 auto;\r\n}\r\n.nav .product-nav .title {\r\n  width: 50px;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  float: left;\r\n}\r\n/* 分类标签CSS END */\r\n\r\n/* 主要内容区CSS */\r\n.goods .main {\r\n  margin: 0 auto;\r\n  max-width: 1225px;\r\n}\r\n.goods .main .list {\r\n  min-height: 650px;\r\n  padding-top: 14.5px;\r\n  margin-left: -13.7px;\r\n  overflow: auto;\r\n}\r\n.goods .main .pagination {\r\n  height: 50px;\r\n  text-align: center;\r\n}\r\n.goods .main .none-product {\r\n  color: #333;\r\n  margin-left: 13.7px;\r\n}\r\n/* 主要内容区CSS END */\r\n</style>"]}]}